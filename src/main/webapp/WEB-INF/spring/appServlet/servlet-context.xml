<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">
	
	
	<!-- 
	PropertySourcesPlaceholderConfigurer  가 ${...} 를 속성에서 불러와주는 기능을 활성화 시킨다. 
	file-encoding 속성 가능 
	-->
	<context:property-placeholder location="classpath:database.properties" />
	


	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>


	<!-- 해당 base-package 에 있는 stereotypes (@Component, @Repository, @Service, @Controller ) 를 스프링 빈으로 등록한다.
		use-default-filters="true" 옵션	-->
	<context:component-scan base-package="com.chrisjhkim.hellospring" >
		<!-- 제외 필터 -->
		<!-- <context:exclude-filter type="annotation" expression="com.chrisjhkim.hellospring.config.spring.ExternalService" />	   -->
	</context:component-scan>
	
	<!-- context:annotation-config는 빈을 등록해주지는 않고 이미 등록된 빈의 메타정보에 프로퍼티 항목을 추가해주는 작업을 한다. -->
	<context:annotation-config />


</beans:beans>
